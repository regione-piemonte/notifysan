//let token = "dyXwKbOXuBsW3B5yQsmCBEBIeIQdmcPYvbn11lvV38tXEAOYhLQgUTkjFEhKpdHbr4qs6CD17t8by0TDEHIu9dXRcXZ7teAUTuoGc9GkadT5+6TR+FHdcPb9N3zMZlXpAvZ1lDJObg55JyJMyoe2lThARVKEMQcOh8RkOG3vs1NvvrrkejUeri0gccoe0puX0a1BHbI+qbB+7PjOPYQrAzS4dmwvLDPRQGk/jRZHisd3UsUtSGbhXVILX+XezNxz2bAoZAFeyLvvm1KrvSyD/Rw5YPHQT1bHixfMZoMi0DFUyNOBtmZ25nJU1z597ZhdxrtaE9gYcAcgYST8nWZYvVsI5EXIlvDhBMRcbMEwPw25Z5XuT1U4h4AeXKDgD9bVRi7FAZ/Un8c9fVmRCue7hbTgwU2LAdp8vqDmIcf12KOoufAOP+BJEIlUFZ+V/2Vcu5czWxl6XJGsiwD1WvwBAJKRzYdSMzNg3o4O/qXz5iPFEM9kZK56x41JJdzpA246+QGWoVCvkXkdKCsljmP+of8nyHBlwNvyAN21uLDyhIfRQ0YzQMBOy5sv7uP0cqNDHrLf5XciRMw4oi1EPtaQS+RomneL7qEwegLBhSDzVmCbmXoQqsbgLLe0IpkKUu6f1ELagDLN/kH84ngFDNzYGCWGi9bHI64jInHaniL6oqXKvjq1+AcFExAE25iz+649KnX/rSs8+OXJa39sprlNd7Cz0sZ+ojRn8gE1CZ85SvtikVsFFlPE7DaM//+O60p7+gr60tA8rr9FRtSwbN9oCGdvtaiyInfrWNk1vtERBiE/YcO9dk0DRmMrFHbR1l6Y2m8A5VFpnV+t+XIyTczfCKJeL1ZFwk2skwNxUYtuWFXeL8zh5LcIKById/qmq2kbyIGGFzJixftHO9yttmtyS5+fJCckJZrIFi1vExjgIgxDzZaduyoPLd6uUvm4J+aNVyp8B3ijm/xJk54+gxQtB+uSxMW3vx8qv2IIxEnMxJWz2blQHOoOkH6IQ9yV4L54bvWjHxCXVkQrKa+OO//46KQuvblvsnlQluSgMvV6Q4dSJrTfrrgUQyWIUhu7TMVr1crCmoLj60yf8MkUx8f0OoB4vt/rD7PakWfUrxU4PnJ8MjPq38F3/QrxgTEHJF3cvsAdHzbSQWojoXNA3uJv6Q==";
let tokenBase64 = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1dWlkIjoiNGRlZjJkYzUtOGM1Ny00NDE5LTg1MGYtOTg4ZjhkN2QzNWQwIiwiY2xpZW50X25hbWUiOiJhcHByZWZlcnRpIiwiY2xpZW50X3V1aWQiOiIxYzIzZmUxYy0xMDhkLTQxOTQtOWM3OS1hNTU1NjVjMDYxMTYiLCJwcmVmZXJlbmNlX3NlcnZpY2VfbmFtZSI6InByb2ZfY2l0dCIsImV4cCI6MjUzNDAyMjEwODAwMDAwLCJpYXQiOjE1MTk4MjI3MDQ0MzgsImFwcGxpY2F0aW9ucyI6WyJub3RpZnkiLCJtZXgiLCJwcmVmZXJlbmNlcyJdLCJwZXJtaXNzaW9ucyI6WyJ1c2VyIiwiYWRtaW4iLCJiYWNrZW5kIl0sInByZWZlcmVuY2VzIjp7InB1c2giOiJBQUFBV214Y2Z6WTpBUEE5MWJISVVaNzhSQlRIYUotaUtOT3pXUXcteTg4SVQ1SXp4UDAxR0V3emtFWlZVejAzTWFrLTJDSHZKV1FkQ2F0RHlqTVRhZEhzUEtVYTBld3pKMHNmMVRBVEZBSFd4d0taNHNhYVhfMFg4czVHVUhNMG5tUG0tMVdLci1XQl9ONWNiMkhWa1RJaiIsImVtYWlsIjoiYXBwcmVmZXJ0b0Bhc2QuY29tIiwibWV4IjoiYXNkYWQiLCJzbXMiOnsidXNlcm5hbWUiOiJub3RpZnkiLCJwYXNzd29yZCI6Im1lZ2Fsb21hbl8xOCIsInByb2plY3RfY29kZSI6IjM3In19fQ.EhoX264aKHRhx-oSXcDfmK1TR56H3GJaFreVw-wykMI";
var fs = require('fs');

var env = (process.env['ENVIRONMENT'] || 'localhost');

var conf = JSON.parse(fs.readFileSync('../src/conf/mb-' + env + ".json", "utf-8"));

//console.log(cryptoaes.encrypt(tokenBase64, conf.security.crypto_password));
//console.log(cryptoaes.decrypt(token, conf.security.crypto_password));

var encoded = crypto.encrypt(tokenBase64,"dev");
console.log(encoded);
var decrypted = crypto.decrypt(encoded,"dev");
console.log(decrypted);
